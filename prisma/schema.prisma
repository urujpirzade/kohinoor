// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  username       String    @unique
  firstName      String
  middleName     String?
  lastName       String
  contact        String   @unique
  hashedPassword String
  image          String?
  role           Role      @default(USER)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Session        Session[]
}

model Event {
  id          Int      @id @default(autoincrement())
  client_name String
  date        DateTime
  start_time  String
  end_time    String
  email       String?
  contact     String
  address     String?
  event_name  String
  hall        Hall
  details     String?
  bookingBy   String?  
  reference   String?
  hallHandover  Boolean? @default(false)
  decoration  Boolean? @default(false)
  catering    Boolean? @default(false)
  kitchen     Boolean? @default(false)
  amount      Int      @default(0)
  advance     Int      @default(0)
  balance     Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

enum Hall {
  mainHall
  secondHall
}

enum Role {
  ROOT
  ADMIN
  MANAGER
  USER
}